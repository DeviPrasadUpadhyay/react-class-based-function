{"ast":null,"code":"var _jsxFileName = \"/Users/enrique/Downloads/classBasedComp/src/components/UserFinder.js\";\n// \n// import { Fragment, useState, useEffect } from \"react\";\n\n// import Users from \"./Users\";\n\n// import classes from \"./UserFinder.module.css\";\n\n// const DUMMY_USERS = [\n// \t{ id: \"u1\", name: \"Max\" },\n// \t{ id: \"u2\", name: \"Manuel\" },\n// \t{ id: \"u3\", name: \"Julie\" },\n// ];\n\n// const UserFinder = () => {\n// \tconst [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n\n// \tconst [searchTerm, setSearchTerm] = useState(\"\");\n\n// \tuseEffect(() => {\n// \t\tsetFilteredUsers(DUMMY_USERS.filter((user) => user.name.includes(searchTerm)));\n// \t}, [searchTerm]);\n\n// \tconst searchChangeHandler = (event) => {\n// \t\tsetSearchTerm(event.target.value);\n// \t};\n\n// \treturn (\n// \t\t<Fragment>\n// \t\t\t<div className={classes.finder}>\n// \t\t\t\t<input type=\"search\" onChange={searchChangeHandler} />\n// \t\t\t</div>\n// \t\t\t<Users users={filteredUsers} />\n// \t\t</Fragment>\n// \t);\n// };\n\n// export default UserFinder;\n\nimport { Fragment, useState, useEffect } from \"react\";\nimport Users from \"./Users\";\nimport classes from \"./UserFinder.module.css\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  users,\n  updateUsers\n} = class UserFinder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: \"\"\n    };\n  }\n  searchChangeHandler(event) {\n    // setSearchTerm(event.target.value);\n\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  // side effects\n  componentDidMount() {\n    // Do a http request to fetch DUMMY_USERS from DB here...\n\n    console.log(\"Fetch success !! \");\n    this.setState({\n      filteredUsers: DUMMY_USERS\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      // cDU will execute on any state change , but this block will execute on searchTerm updation only\n\n      this.setState({\n        filteredUsers: DUMMY_USERS.filter(user => user.name.includes(this.state.searchTerm))\n      });\n    }\n  }\n  componentWillUnmount() {\n    console.log(\"UserFinder will unmount !! \");\n  }\n  render() {\n    // const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n\n    // const [searchTerm, setSearchTerm] = useState(\"\");\n\n    // useEffect(() => {\n    // \tsetFilteredUsers(DUMMY_USERS.filter((user) => user.name.includes(searchTerm)));\n    // }, [searchTerm]);\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.finder,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          onChange: this.searchChangeHandler.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Users, {\n        users: this.state.filteredUsers\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this);\n  }\n};\nexport default UserFinder;","map":{"version":3,"names":["Fragment","useState","useEffect","Users","classes","Component","users","updateUsers","UserFinder","constructor","state","filteredUsers","searchTerm","searchChangeHandler","event","setState","target","value","componentDidMount","console","log","DUMMY_USERS","componentDidUpdate","prevProps","prevState","filter","user","name","includes","componentWillUnmount","render","finder","bind"],"sources":["/Users/enrique/Downloads/classBasedComp/src/components/UserFinder.js"],"sourcesContent":["// \n// import { Fragment, useState, useEffect } from \"react\";\n\n// import Users from \"./Users\";\n\n// import classes from \"./UserFinder.module.css\";\n\n// const DUMMY_USERS = [\n// \t{ id: \"u1\", name: \"Max\" },\n// \t{ id: \"u2\", name: \"Manuel\" },\n// \t{ id: \"u3\", name: \"Julie\" },\n// ];\n\n// const UserFinder = () => {\n// \tconst [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n\n// \tconst [searchTerm, setSearchTerm] = useState(\"\");\n\n// \tuseEffect(() => {\n// \t\tsetFilteredUsers(DUMMY_USERS.filter((user) => user.name.includes(searchTerm)));\n// \t}, [searchTerm]);\n\n// \tconst searchChangeHandler = (event) => {\n// \t\tsetSearchTerm(event.target.value);\n// \t};\n\n// \treturn (\n// \t\t<Fragment>\n// \t\t\t<div className={classes.finder}>\n// \t\t\t\t<input type=\"search\" onChange={searchChangeHandler} />\n// \t\t\t</div>\n// \t\t\t<Users users={filteredUsers} />\n// \t\t</Fragment>\n// \t);\n// };\n\n// export default UserFinder;\n\nimport { Fragment, useState, useEffect } from \"react\";\n\nimport Users from \"./Users\";\n\nimport classes from \"./UserFinder.module.css\";\n\nimport { Component } from \"react\";\n\n\nconst {users, updateUsers} = \n\nclass UserFinder extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tfilteredUsers: [],\n\t\t\tsearchTerm: \"\",\n\t\t};\n\t}\n\n\tsearchChangeHandler(event) {\n\t\t// setSearchTerm(event.target.value);\n\n\t\tthis.setState({ searchTerm: event.target.value });\n\t}\n\n\t// side effects\n\tcomponentDidMount() {\n\t\t// Do a http request to fetch DUMMY_USERS from DB here...\n\n\t\tconsole.log(\"Fetch success !! \");\n\t\tthis.setState({ filteredUsers: DUMMY_USERS });\n\t}\n\n\tcomponentDidUpdate(prevProps, prevState) {\n\t\tif (prevState.searchTerm !== this.state.searchTerm) {\n\t\t\t// cDU will execute on any state change , but this block will execute on searchTerm updation only\n\n\t\t\tthis.setState({\n\t\t\t\tfilteredUsers: DUMMY_USERS.filter((user) => user.name.includes(this.state.searchTerm)),\n\t\t\t});\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tconsole.log(\"UserFinder will unmount !! \");\n\t}\n\n\trender() {\n\t\t// const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n\n\t\t// const [searchTerm, setSearchTerm] = useState(\"\");\n\n\t\t// useEffect(() => {\n\t\t// \tsetFilteredUsers(DUMMY_USERS.filter((user) => user.name.includes(searchTerm)));\n\t\t// }, [searchTerm]);\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className={classes.finder}>\n\t\t\t\t\t<input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />\n\t\t\t\t</div>\n\n\t\t\t\t<Users users={this.state.filteredUsers} />\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default UserFinder;\n"],"mappings":";AAAA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAErD,OAAOC,KAAK,MAAM,SAAS;AAE3B,OAAOC,OAAO,MAAM,yBAAyB;AAE7C,SAASC,SAAS,QAAQ,OAAO;AAAC;AAGlC,MAAM;EAACC,KAAK;EAAEC;AAAW,CAAC,GAE1B,MAAMC,UAAU,SAASH,SAAS,CAAC;EAClCI,WAAW,GAAG;IACb,KAAK,EAAE;IAEP,IAAI,CAACC,KAAK,GAAG;MACZC,aAAa,EAAE,EAAE;MACjBC,UAAU,EAAE;IACb,CAAC;EACF;EAEAC,mBAAmB,CAACC,KAAK,EAAE;IAC1B;;IAEA,IAAI,CAACC,QAAQ,CAAC;MAAEH,UAAU,EAAEE,KAAK,CAACE,MAAM,CAACC;IAAM,CAAC,CAAC;EAClD;;EAEA;EACAC,iBAAiB,GAAG;IACnB;;IAEAC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,IAAI,CAACL,QAAQ,CAAC;MAAEJ,aAAa,EAAEU;IAAY,CAAC,CAAC;EAC9C;EAEAC,kBAAkB,CAACC,SAAS,EAAEC,SAAS,EAAE;IACxC,IAAIA,SAAS,CAACZ,UAAU,KAAK,IAAI,CAACF,KAAK,CAACE,UAAU,EAAE;MACnD;;MAEA,IAAI,CAACG,QAAQ,CAAC;QACbJ,aAAa,EAAEU,WAAW,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAACC,QAAQ,CAAC,IAAI,CAAClB,KAAK,CAACE,UAAU,CAAC;MACtF,CAAC,CAAC;IACH;EACD;EACAiB,oBAAoB,GAAG;IACtBV,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC3C;EAEAU,MAAM,GAAG;IACR;;IAEA;;IAEA;IACA;IACA;;IAEA,oBACC,QAAC,QAAQ;MAAA,wBACR;QAAK,SAAS,EAAE1B,OAAO,CAAC2B,MAAO;QAAA,uBAC9B;UAAO,IAAI,EAAC,QAAQ;UAAC,QAAQ,EAAE,IAAI,CAAClB,mBAAmB,CAACmB,IAAI,CAAC,IAAI;QAAE;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QACjE,eAEN,QAAC,KAAK;QAAC,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACC;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAEb;AACD,CAAC;AAED,eAAeH,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}